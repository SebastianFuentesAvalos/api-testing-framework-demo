{
  "info": {
    "name": "Security Tests",
    "description": "Security-focused test suite for the API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "SQL Injection Test",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('SQL injection attempt returns proper error', function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([400, 404]);",
              "});",
              "",
              "pm.test('No database error exposed', function () {",
              "    const responseText = pm.response.text();",
              "    pm.expect(responseText).to.not.include('SQL');",
              "    pm.expect(responseText).to.not.include('database');",
              "    pm.expect(responseText).to.not.include('mysql');",
              "    pm.expect(responseText).to.not.include('postgres');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/1' OR '1'='1",
          "host": ["{{baseUrl}}"],
          "path": ["users", "1' OR '1'='1"]
        }
      }
    },
    {
      "name": "XSS Prevention Test",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('XSS attempt properly handled', function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([400, 422]);",
              "});",
              "",
              "pm.test('Script tags are not executed', function () {",
              "    const responseText = pm.response.text();",
              "    if (pm.response.code === 201) {",
              "        pm.expect(responseText).to.not.include('<script>');",
              "    }",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"<script>alert('xss')</script>\",\n  \"email\": \"test@example.com\",\n  \"age\": 25\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/users",
          "host": ["{{baseUrl}}"],
          "path": ["users"]
        }
      }
    },
    {
      "name": "Security Headers Check",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Security headers are present', function () {",
              "    pm.expect(pm.response.headers.get('X-Content-Type-Options')).to.eql('nosniff');",
              "    pm.expect(pm.response.headers.get('X-Frame-Options')).to.exist;",
              "    pm.expect(pm.response.headers.get('X-XSS-Protection')).to.exist;",
              "});",
              "",
              "pm.test('Content-Type header is properly set', function () {",
              "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        }
      }
    }
  ]
}